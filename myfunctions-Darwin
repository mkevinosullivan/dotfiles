# createpr
function createpr {
  if (( $# == 0 )); then
    echo -e "\x1b[31musage:\x1b[0m createpr <title of PR, in quotes>"
  else
    descfile=$(/usr/bin/mktemp /tmp/descfile.XXXXXXXX)
    /bin/mv $descfile $descfile.md
    if [ -e ./.github/PULL_REQUEST_TEMPLATE.md ]; then
      /bin/cat ./.github/PULL_REQUEST_TEMPLATE.md > $descfile.md
    fi

    /usr/local/bin/code -n -w $descfile.md
    /usr/local/bin/gh pr create --draft --title $1 --body "$(/bin/cat $descfile.md)"
    /bin/rm -f $descfile.md
    /usr/local/bin/gh pr view --web
  fi
}
echo -e "\x1b[32m\u2713 createpr\x1b[0m"

# staging
function staging {
  if (( $# == 0 )); then
    echo -e "\x1b[31musage:\x1b[0m staging <number of staging env>"
  else
    /usr/bin/env git push origin +$(/usr/bin/env git rev-parse --abbrev-ref HEAD):staging$1
  fi
}
echo -e "\x1b[32m\u2713 staging\x1b[0m"

# next function would go below this line
function mainbranch {
  /usr/bin/env git remote show origin | /usr/bin/env sed -n '/HEAD branch/s/.*: //p'
}
echo -e "\x1b[32m\u2713 mainbranch\x1b[0m"

# next function would go below this line
function clrb {
  mainreference="origin/$(mainbranch)"
  echo -e "Comparing current HEAD to \x1b[32m$mainreference\x1b[0m ..."
  count=$(/usr/bin/env git rev-list --count $mainreference..HEAD)
  if (($count > 0)); then
    echo -e "Rebasing \x1b[32m$count\x1b[0m commits ..."
    /usr/bin/env git irb HEAD~$((count+1))
  else
    echo "No commits to rebase."
  fi
}
echo -e "\x1b[32m\u2713 clrb\x1b[0m"


# next function would go below this line
#
#
# echo -e "\x1b[32m\u2713 <function_name>\x1b[0m"
